
pipeline {
    agent any

    environment {
        IMAGE_NAME = 'your-dockerhub-username/your-image-name'
        IMAGE_TAG = 'latest'  // or use a build number, e.g., "${BUILD_NUMBER}"
        DOCKERHUB_CRED = 'your-dockerhub-credentials-id'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker rm -f staticwebsite || true'
                    sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} -f Dockerfile ."
                    sh "docker run -d -p 8081:80 --name staticwebsite ${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKERHUB_CRED}") {
                        sh """
                            docker rmi -f ${IMAGE_NAME}:${IMAGE_TAG} || true
                            docker rmi -f ${IMAGE_NAME}:latest || true
                        """
                        sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                        sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest"
                        sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                        sh "docker push ${IMAGE_NAME}:latest"
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                sh "docker rmi ${IMAGE_NAME}:${IMAGE_TAG} || true"
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
